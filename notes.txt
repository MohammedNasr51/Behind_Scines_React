performance:

    understanding the component tree when rendering make you know how to make the 
    performance good.

    if you have a components in the app component that not necesserly should reexecutes
    if the app rerendered and it is in the high level of the tree so =>

1 - memo solution :
        you can rapp the component in the memo that you will import from react and store 
        the value in a const and export default it 
    - what memo does ?
        it checks the props that comming when the parent is rerendering if it changed it 
        makes the component rerendered and if not it prevents the unneccessary rerendering.

    - when you should use it ?
        the answer is in the line 6.

    - you should be aware of the ability of make a seperate component that causes the change
        and left some state and this will solve the proplem initially (be clever).        


2 - useMemo solution (for normal functions not components):
    - its a hook that used the same as memo to prevent not wanted reexecution of a complex functions.     


Reat virtual dom:
    react crates a vdom snapshot and when you change a state that causes change it creates
    a new snapshot vdom and compare it to the old one and only apply the changes to the real dom
    not the whole component that its state changed but only the changed part of it.
